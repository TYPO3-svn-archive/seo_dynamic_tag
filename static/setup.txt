  ////////////////////////////////////////////////
  //
  // INDEX
  //
  // plugin.tx_seodynamictag_pi1
  // Global condition for the list view
  // Global condition for the single view



  ////////////////////////////////////////////////
  //
  // plugin.tx_seodynamictag_pi1

plugin.tx_seodynamictag_pi1 {
    // 49442
  page =
  page {
      // meta tag author, meta tag description, meta tag keywords, title 
    49442 = COA
    49442 {
        // canonical tag
      10 = USER
      10 {
        includeLibs = typo3conf/ext/seo_dynamic_tag/pi1/class.tx_seodynamictag_pi1.php
        userFunc    = tx_seodynamictag_pi1->main
          // special: don't touch it!
        special     = canonical
          // Enable or disable the canonical tag
        enabled     = {$plugin.tx_seodynamictag.canonical.enabled}
          // host for the absolute URL. Leave it empty, if the default host of the frontend should used
        host        = {$plugin.tx_seodynamictag.canonical.host}
          // path
        path        = TEXT
        path {
          typolink {
            parameter {
              data = page:uid
            }
            additionalParams = {$plugin.tx_seodynamictag.canonical.single.additionalParams}
            additionalParams {
              insertData = 1
            } 
            //addQueryString = 1
            //addQueryString {
            //  method  = GET
            //  exclude = L,cHash,no_cache,tx_ttnews%5BbackPid%5D
            //}
            useCacheHash = {$plugin.tx_seodynamictag.canonical.useCashHash}
            returnLast = url
          }
        }
          // Enable it and you will get a prompt in the frontend
        debug = {$plugin.tx_seodynamictag.debugging.canonical}{$plugin.tx_seodynamictag.debugging.all}
      }
        // meta tag author
      20 = USER
      20 {
        includeLibs = typo3conf/ext/seo_dynamic_tag/pi1/class.tx_seodynamictag_pi1.php
        userFunc    = tx_seodynamictag_pi1->main
          // special: don't touch it!
        special     = register
          // register: don't touch it!
        register    = author
        query {
          select    = {$plugin.tx_seodynamictag.database.field.author}
          from      = {$plugin.tx_seodynamictag.database.table}
          where     = uid = $1 AND deleted = 0 AND hidden = 0
          var.1     = {$plugin.tx_seodynamictag.database.var.1}
        }
          // Enable it and you will get a prompt in the frontend
        debug   = {$plugin.tx_seodynamictag.debugging.author}{$plugin.tx_seodynamictag.debugging.all}
      }
        // meta tag description
      30 = USER
      30 {
        includeLibs = typo3conf/ext/seo_dynamic_tag/pi1/class.tx_seodynamictag_pi1.php
        userFunc    = tx_seodynamictag_pi1->main
          // special: don't touch it!
        special     = register
          // register: don't touch it!
        register    = description
        query {
          //select    = {$plugin.tx_seodynamictag.database.field.description}
          select    = CONCAT('{$plugin.tx_seodynamictag.default.description.prefix} ', {$plugin.tx_seodynamictag.database.field.description}, ' {$plugin.tx_seodynamictag.default.description.appendix}') as value
          from      = {$plugin.tx_seodynamictag.database.table}
          where     = uid = $1 AND deleted = 0 AND hidden = 0
          var.1     = {$plugin.tx_seodynamictag.database.var.1}
          maxLength = 200
        }
          // Enable it and you will get a prompt in the frontend
        debug = {$plugin.tx_seodynamictag.debugging.description}{$plugin.tx_seodynamictag.debugging.all}
      }
        // meta tag keywords
      40 = USER
      40 {
        includeLibs = typo3conf/ext/seo_dynamic_tag/pi1/class.tx_seodynamictag_pi1.php
        userFunc    = tx_seodynamictag_pi1->main
          // special: don't touch it!
        special     = register
          // register: don't touch it!
        register    = keywords
        query {
          select    = {$plugin.tx_seodynamictag.database.field.keywords}
          from      = {$plugin.tx_seodynamictag.database.table}
          where     = uid = $1 AND deleted = 0 AND hidden = 0
          var.1     = {$plugin.tx_seodynamictag.database.var.1}
        }
          // Enable it and you will get a prompt in the frontend
        debug = {$plugin.tx_seodynamictag.debugging.keywords}{$plugin.tx_seodynamictag.debugging.all}
        keywords = 1
        keywords {
          amount        = {$plugin.tx_seodynamictag.default.keywords.amount}
          minLength     = {$plugin.tx_seodynamictag.default.keywords.minLength}
          forcedList    = {$plugin.tx_seodynamictag.default.keywords.forcedList}
          positiveList  = {$plugin.tx_seodynamictag.default.keywords.positiveList}
          negativeList  = {$plugin.tx_seodynamictag.default.keywords.negativeList}
        }
      }
        // title
      50 = USER
      50 {
        includeLibs = typo3conf/ext/seo_dynamic_tag/pi1/class.tx_seodynamictag_pi1.php
        userFunc    = tx_seodynamictag_pi1->main
          // special: don't touch it!
        special     = title
        query {
          select    = CONCAT({$plugin.tx_seodynamictag.database.field.title}, ': ', {$plugin.tx_seodynamictag.database.field.short})
          from      = {$plugin.tx_seodynamictag.database.table}
          where     = uid = $1 AND deleted = 0 AND hidden = 0
          var.1     = {$plugin.tx_seodynamictag.database.var.1}
          maxLength = 100
        }
          // Enable it and you will get a prompt in the frontend
        debug = {$plugin.tx_seodynamictag.debugging.title}{$plugin.tx_seodynamictag.debugging.all}
      }
    }
  }
}
  // plugin.tx_seodynamictag_pi1



  ////////////////////////////////////////////////
  //
  // Global condition for the list view

[{$plugin.tx_seodynamictag.condition.list.begin}]
  {$plugin.tx_seodynamictag.page.tsProperty} {
    {$plugin.tx_seodynamictag.page.object} < plugin.tx_seodynamictag_pi1.page.49442
    {$plugin.tx_seodynamictag.page.object} {
      10.path.typolink.additionalParams = {$plugin.tx_seodynamictag.canonical.list.additionalParams}
    }
  }
[{$plugin.tx_seodynamictag.condition.list.end}]
  // Global condition for the list view



  ////////////////////////////////////////////////
  //
  // Global condition for the single view

[{$plugin.tx_seodynamictag.condition.single.begin}]
  {$plugin.tx_seodynamictag.page.tsProperty} {
    meta {
      author {
        field   >
        ifEmpty = {$plugin.tx_seodynamictag.default.author}
        data    = register:author
      }
      description {
        field   >
        ifEmpty = {$plugin.tx_seodynamictag.default.description}
        data    = register:description
      }
      keywords {
        field   >
        data    = register:keywords
        ifEmpty = {$plugin.tx_seodynamictag.default.keywords}
      }
    }
    {$plugin.tx_seodynamictag.page.object} < plugin.tx_seodynamictag_pi1.page.49442
  }
[{$plugin.tx_seodynamictag.condition.single.end}]
  // Global condition for the single view